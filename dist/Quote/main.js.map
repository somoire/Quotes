{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/quote-details/quote-details.component.css","webpack:///./src/app/quote-details/quote-details.component.html","webpack:///./src/app/quote-details/quote-details.component.ts","webpack:///./src/app/quote-form/quote-form.component.css","webpack:///./src/app/quote-form/quote-form.component.html","webpack:///./src/app/quote-form/quote-form.component.ts","webpack:///./src/app/quote.ts","webpack:///./src/app/quote/quote.component.css","webpack:///./src/app/quote/quote.component.html","webpack:///./src/app/quote/quote.component.ts","webpack:///./src/app/time-since.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron\\\"> \\n  <app-quote></app-quote>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport {Quote} from './quote';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  quotes = [\n  ]\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { QuoteComponent } from './quote/quote.component';\nimport { QuoteDetailsComponent } from './quote-details/quote-details.component';\nimport { TimeSincePipe } from './time-since.pipe';\nimport { QuoteFormComponent } from './quote-form/quote-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteComponent,\n    QuoteDetailsComponent,\n    TimeSincePipe,\n    QuoteFormComponent,\n    TimeSincePipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1b3RlLWRldGFpbHMvcXVvdGUtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"  <h4>Date Posted: {{quote.time|time}}</h4>\\n<blockquote >\\n  <p>{{quote.entry}}</p>\\n  <footer>Author:\\n    <cite >{{quote.title}}</cite>\\n    <cite>{{quote.entry}}</cite>\\n  </footer>\\n</blockquote>\\n\\n<i class=\\\" far fa-thumbs-up\\\" (click)=\\\"increaseRating(true)\\\">{{quote.like}}</i> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n<i class=\\\"far fa-thumbs-down\\\" (click)=\\\"increaseRating(false)\\\">{{quote.dislike}}</i>\\n\\n\\n  <br>\\n  <button class=\\\"btn btn-danger\\\" (click)= \\\"deleteQuote(true)\\\">Delete Quote</button>\"","import { Component, OnInit,Input, Output, EventEmitter} from '@angular/core';\nimport {Quote} from '../quote';\n\n\n@Component({\n  selector: 'app-quote-details',\n  templateUrl: './quote-details.component.html',\n  styleUrls: ['./quote-details.component.css']\n})\nexport class QuoteDetailsComponent implements OnInit {\n  @Input() quote:Quote;\n  @Output() isDelete = new EventEmitter<boolean>();\n\n  @Output() isRating = new EventEmitter<boolean>();\n\n  increaseRating(rating:boolean) {\n    this.isRating.emit(rating);\n  }\n\n  deleteQuote(complete:boolean){\n    this.isDelete.emit(complete);\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1b3RlLWZvcm0vcXVvdGUtZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div container= \\\"container-fluid text-center\\\">\\n  \\n    <div class=\\\"panel panel-info\\\">\\n    <form (ngSubmit)='addNewQuote(title.value,author.value,entry.value)' #quoteForm='ngForm'>\\n      <div class=\\\"form-group\\\">\\n\\n        <label for=\\\"name\\\">Title</label>\\n        <input  type=\\\"text\\\" class=\\\"form-control form-control-lg text-center\\\" id=\\\"title\\\" [(ngModel)]=\\\"newQuote.title\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" required>\\n        <div [hidden]=\\\"title.valid || title.pristine\\\" class=\\\"alert alert-danger\\\">\\n          <h4>Complete the field</h4>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n\\n        <label for=\\\"name\\\">Author</label>\\n        <input  type=\\\"text\\\" class=\\\"form-control form-control-lg text-center\\\" id=\\\"author\\\" [(ngModel)]=\\\"newQuote.author\\\" name=\\\"author\\\" #author =\\\"ngModel\\\" required>\\n        <div [hidden]=\\\"author.valid || author.pristine\\\" class=\\\"alert alert-danger\\\">\\n          <h4>Input author's name!</h4>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n\\n        <label for=\\\"name\\\">Quote</label>\\n        <textarea class=\\\"form-control\\\" id=\\\"entry\\\" rows=\\\"4\\\" [(ngModel)]=\\\"newQuote.entry\\\" name=\\\"entry\\\" #entry=\\\"ngModel\\\" required></textarea>\\n        <div [hidden]=\\\"entry.valid || entry.pristine\\\" class=\\\"alert alert-danger\\\">\\n          <h4>Input Quote!</h4>\\n        </div>\\n\\n      </div>\\n\\n      <!-- <div class=\\\"form-group\\\">\\n\\n          <label for=\\\"name\\\">Submitter</label>\\n          <input  type=\\\"text\\\" class=\\\"form-control form-control-lg text-center\\\" id=\\\"submitter\\\" [(ngModel)]=\\\"newQuote.submitter\\\" name=\\\"submitter\\\" #submitter =\\\"ngModel\\\" required>\\n          <div [hidden]=\\\"submitter.valid || submitter.pristine\\\" class=\\\"alert alert-danger\\\">\\n            <h4>Input your name!</h4>\\n          </div>\\n   -->\\n        <!-- </div> -->\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg\\\">Add Quote</button>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit,Input,Output,EventEmitter } from '@angular/core';\nimport {Quote} from '../quote';\n\n@Component({\n  selector: 'app-quote-form',\n  templateUrl: './quote-form.component.html',\n  styleUrls: ['./quote-form.component.css']\n})\nexport class QuoteFormComponent implements OnInit {\n  newQuote = new Quote(0,\"\",\"\",\"\",0,0,0,false);\n  @Output() addQuote= new EventEmitter<Quote>();\n  @Input() addNewQuote: Function;\n\n  submitQuote(){\n    this.addQuote.emit(this.newQuote);\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}","export class Quote {\n  constructor(public id: number,public title:string,public author:string, public entry:string, public like:number, public dislike:number, public time: number, public highest: boolean){\n    this.like = 0;\n    this.dislike = 0;\n    this.time= 0;\n    this.highest =false;\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1b3RlL3F1b3RlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 style=\\\"color:rgb(7, 4, 10);\\\">ALL TIME GREAT QUOTES</h1>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col md-6\\\" id=\\\"form\\\">\\n      <app-quote-form [addNewQuote]='addNewQuoteFunc' ></app-quote-form>\\n  </div>\\n  <div class=\\\"col md-6\\\" id=\\\"quote\\\">\\n    <h2 style=\\\"text-decoration:underline;\\\"><b>\\\"Quotes\\\"</b></h2>\\n    <div class=\\\"\\\" *ngFor=\\\"let quote of quotes;let i = 'index'\\\">\\n      <!-- <p>{{quote.title}}</p> -->\\n      <p>{{quote.author}}</p>\\n      <!-- <p>{{quote.Quote}}</p> -->\\n      <!-- <p>{{quote.submitter}}</p> -->\\n        <button class=\\\"btn btn-success\\\"  (click)='toggleDetails(i)'>Quote Details</button>\\n      <div *ngIf=\\\"quote.showDescription\\\">\\n          <app-quote-details [quote]='quote' (isRating)='increaseRating($event,i)' (isDelete)='deleteQuote($event,i)'></app-quote-details>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<h3 style=\\\"text-align:center; \\\">Great all time quotes.</h3>\\n\"","\nimport { Component, OnInit, } from '@angular/core';\nimport{Quote} from '../quote'\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n    private duration: number;\n    private id:number = 0;\n    quotes = [\n      \n        ]\n    toggleDetails(index){\n      this.quotes[index].showDescription = !this.quotes[index].showDescription;\n    }\n    increaseRating(isRating,index){\n      if(isRating){\n        this.quotes[index].like +=1;\n        this.getHighest();\n      }else{\n        this.quotes[index].dislike +=1;\n      }\n    }\n  \n    get addNewQuoteFunc(){\n      return this.addNewQuote.bind(this);\n    }\n  \n    deleteQuote(isDelete,index){\n      if(isDelete){\n        this.quotes.splice(index,1);\n      }\n    }\n  \n    addNewQuote(id: number,title:string,author:string,entry:string,time:number){\n      let quote:Quote=new Quote(id,title,author,entry,0,0,0,false)\n      this.id += 1;\n      quote.id = this.id;\n      this.duration = setInterval(()=>{\n         quote.time += 1;\n      },1000);\n      this.quotes.push(quote);\n  \n    }\n\n    getHighest(){\n      let highest = 0;\n      let highestQuote: Quote;\n      for(let quote of this.quotes){\n        if(quote.like>highest){\n          highest=quote.like;\n          highestQuote=quote;\n        }\n      }\n      console.log(highestQuote);\n      this.getId(highestQuote);\n    }\n  \n    getId(change:Quote){\n      for(let quote of this.quotes){\n        if(quote.id == change.id){\n          quote.highest=true;\n        }\n        else{\n          quote.highest=false;\n        }\n      }\n    }\n  \n    constructor() { }\n  \n    ngOnInit() {\n    }\n    ngOnDestroy(){\n      clearInterval(this.duration);\n    }\n  \n  }","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'time'\n})\nexport class TimeSincePipe implements PipeTransform {\n\n  transform(value: any): any {\n    let days,hours,minutes;\n    if(value<= 59){\n      return `a few seconds ago`\n    }\n    else if(value>= 60 && value <=3599){\n      minutes = Math.round(value/60);\n      if(minutes ==1 ){\n        return `${minutes} minute ago`;\n      }else{\n        return `${minutes} minutes ago`;\n      }\n    }else{\n      hours = Math.round(value/3600);\n      if(hours==1){\n        return `${hours} hour ago`;\n      }else{\n        return `${hours} hours ago`;\n      }\n    }\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}